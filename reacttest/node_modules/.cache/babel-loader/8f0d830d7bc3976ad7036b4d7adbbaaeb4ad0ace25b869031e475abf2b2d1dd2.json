{"ast":null,"code":"var _jsxFileName = \"/Users/ts/Desktop/reactDemo/reacttest/src/components/memo/MemoUpdate.tsx\",\n  _s = $RefreshSig$();\n// いつも通りの3点セット\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom'; // useParamsを追加\n\n// Memoを定義\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 更新処理を定義\nconst MemoUpdate = () => {\n  _s();\n  // 使用する定数を定義\n  // useParamsでidを取得\n  const {\n    id\n  } = useParams();\n  const [memo, setMemo] = useState(null);\n  const [content, setContent] = useState('');\n  const [createdAt, setCreatedAt] = useState('');\n  const [updatedAt, setUpdatedAt] = useState('');\n  const [error, setError] = useState(null);\n  // 更新完了後に画面遷移するために追加\n  const navigate = useNavigate();\n\n  // まずはfetchで情報を取得する処理を記載\n  useEffect(() => {\n    const fetchMemo = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/memo/${id}`);\n        setMemo(response.data);\n        setContent(response.data.content);\n        setCreatedAt(response.data.createdAt);\n        setUpdatedAt(response.data.updatedAt);\n      } catch (error) {\n        setError(\"メモの取得に失敗しました。\");\n        console.error(\"メモ取得エラー:\", error);\n      }\n    };\n    if (id) {\n      fetchMemo();\n    }\n  }, [id]);\n\n  //更新内容をバックエンドに送る処理\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null); // エラーメッセージをクリア\n\n    if (!memo) {\n      setError(\"メモデータがありません。\");\n      return;\n    }\n    try {\n      await axios.post(`http://localhost:8080/api/memo/update/${memo.id}`, {\n        id: memo.id,\n        content: content,\n        createdAt: createdAt,\n        updatedAt: updatedAt\n      });\n      // 更新成功後の処理（例：成功メッセージを表示、一覧ページへリダイレクトなど）\n      navigate(\"/api/memo/all\");\n      alert(\"メモを更新しました。\");\n    } catch (error) {\n      setError(\"メモの更新に失敗しました。\");\n      console.error(\"メモ更新エラー:\", error);\n    }\n  };\n  if (!memo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u30E1\\u30E2\\u3092\\u8AAD\\u307F\\u8FBC\\u3093\\u3067\\u3044\\u307E\\u3059...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  }\n\n  // html要素を記述\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u5185\\u5BB9:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"content\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u4F5C\\u6210\\u65E5\\u6642:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"createdAt\",\n        value: createdAt,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u66F4\\u65B0\\u65E5\\u6642:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"updatedAt\",\n        value: updatedAt,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u30E1\\u30E2\\u3092\\u66F4\\u65B0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(MemoUpdate, \"2nYZtjbOYBH1D+aT6EtG8mXs54g=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MemoUpdate;\nexport default MemoUpdate;\nvar _c;\n$RefreshReg$(_c, \"MemoUpdate\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","MemoUpdate","_s","id","memo","setMemo","content","setContent","createdAt","setCreatedAt","updatedAt","setUpdatedAt","error","setError","navigate","fetchMemo","response","get","data","console","handleSubmit","e","preventDefault","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","value","onChange","target","readOnly","style","color","_c","$RefreshReg$"],"sources":["/Users/ts/Desktop/reactDemo/reacttest/src/components/memo/MemoUpdate.tsx"],"sourcesContent":["// いつも通りの3点セット\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom'; // useParamsを追加\n\n// Memoを定義\ninterface Memo {\n    id: number; // バックエンドでLong型に変更する\n    content: string;\n    createdAt: string;\n    updatedAt: string;\n  }\n\n// 更新処理を定義\nconst MemoUpdate: React.FC = () => {\n    // 使用する定数を定義\n    // useParamsでidを取得\n    const { id } = useParams<{ id: string }>();\n    const [memo, setMemo] = useState<Memo | null>(null);\n    const [content, setContent] = useState('');\n    const [createdAt, setCreatedAt] = useState('');\n    const [updatedAt, setUpdatedAt] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    // 更新完了後に画面遷移するために追加\n    const navigate = useNavigate(); \n\n    // まずはfetchで情報を取得する処理を記載\n    useEffect(() => {\n        const fetchMemo = async () => {\n          try {\n            const response = await axios.get(`http://localhost:8080/api/memo/${id}`);\n            setMemo(response.data);\n            setContent(response.data.content);\n            setCreatedAt(response.data.createdAt);\n            setUpdatedAt(response.data.updatedAt);\n          } catch (error) {\n            setError(\"メモの取得に失敗しました。\");\n            console.error(\"メモ取得エラー:\", error);\n          }\n        };\n    \n        if (id) {\n          fetchMemo();\n        }\n      }, [id]);\n\n      //更新内容をバックエンドに送る処理\n      const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setError(null); // エラーメッセージをクリア\n    \n        if (!memo) {\n          setError(\"メモデータがありません。\");\n          return;\n        }\n    \n        try {\n          await axios.post(`http://localhost:8080/api/memo/update/${memo.id}`, {\n            id: memo.id,\n            content: content,\n            createdAt: createdAt,\n            updatedAt: updatedAt,\n          });\n          // 更新成功後の処理（例：成功メッセージを表示、一覧ページへリダイレクトなど）\n          navigate(\"/api/memo/all\");\n          alert(\"メモを更新しました。\");\n        } catch (error) {\n          setError(\"メモの更新に失敗しました。\");\n          console.error(\"メモ更新エラー:\", error);\n        }\n      };\n\n      if (!memo) {\n        return <div>メモを読み込んでいます...</div>;\n      }\n    \n      // html要素を記述\n      return (\n        <form onSubmit={handleSubmit}>\n          <label>\n            内容:\n            <input\n              type=\"text\"\n              name=\"content\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            />\n          </label>\n          <label>\n            作成日時:\n            <input type=\"text\" name=\"createdAt\" value={createdAt} readOnly /> {/*readOnly属性を追加*/}\n          </label>\n          <label>\n            更新日時:\n            <input type=\"text\" name=\"updatedAt\" value={updatedAt} readOnly /> {/*readOnly属性を追加*/}\n          </label>\n          {error && <div style={{ color: 'red' }}>{error}</div>}\n          <button type=\"submit\">メモを更新</button>\n        </form>\n    );\n};\n\n\nexport default MemoUpdate;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA;AACA,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B;EACA;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAiB,CAAC;EAC1C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAgB,IAAI,CAAC;EACvD;EACA,MAAMoB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;;EAE9B;EACAH,SAAS,CAAC,MAAM;IACZ,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,kCAAkCd,EAAE,EAAE,CAAC;QACxEE,OAAO,CAACW,QAAQ,CAACE,IAAI,CAAC;QACtBX,UAAU,CAACS,QAAQ,CAACE,IAAI,CAACZ,OAAO,CAAC;QACjCG,YAAY,CAACO,QAAQ,CAACE,IAAI,CAACV,SAAS,CAAC;QACrCG,YAAY,CAACK,QAAQ,CAACE,IAAI,CAACR,SAAS,CAAC;MACvC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,QAAQ,CAAC,eAAe,CAAC;QACzBM,OAAO,CAACP,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF,CAAC;IAED,IAAIT,EAAE,EAAE;MACNY,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACZ,EAAE,CAAC,CAAC;;EAER;EACA,MAAMiB,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEhB,IAAI,CAACT,IAAI,EAAE;MACTS,QAAQ,CAAC,cAAc,CAAC;MACxB;IACF;IAEA,IAAI;MACF,MAAMjB,KAAK,CAAC2B,IAAI,CAAC,yCAAyCnB,IAAI,CAACD,EAAE,EAAE,EAAE;QACnEA,EAAE,EAAEC,IAAI,CAACD,EAAE;QACXG,OAAO,EAAEA,OAAO;QAChBE,SAAS,EAAEA,SAAS;QACpBE,SAAS,EAAEA;MACb,CAAC,CAAC;MACF;MACAI,QAAQ,CAAC,eAAe,CAAC;MACzBU,KAAK,CAAC,YAAY,CAAC;IACrB,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdC,QAAQ,CAAC,eAAe,CAAC;MACzBM,OAAO,CAACP,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAClC;EACF,CAAC;EAED,IAAI,CAACR,IAAI,EAAE;IACT,oBAAOJ,OAAA;MAAAyB,QAAA,EAAK;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClC;;EAEA;EACA,oBACE7B,OAAA;IAAM8B,QAAQ,EAAEV,YAAa;IAAAK,QAAA,gBAC3BzB,OAAA;MAAAyB,QAAA,GAAO,eAEL,eAAAzB,OAAA;QACE+B,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,SAAS;QACdC,KAAK,EAAE3B,OAAQ;QACf4B,QAAQ,EAAGb,CAAC,IAAKd,UAAU,CAACc,CAAC,CAACc,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACR7B,OAAA;MAAAyB,QAAA,GAAO,2BAEL,eAAAzB,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,KAAK,EAAEzB,SAAU;QAAC4B,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACR7B,OAAA;MAAAyB,QAAA,GAAO,2BAEL,eAAAzB,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,KAAK,EAAEvB,SAAU;QAAC0B,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,EACPjB,KAAK,iBAAIZ,OAAA;MAAKqC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAEb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrD7B,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEf,CAAC;AAAC3B,EAAA,CAtFID,UAAoB;EAAA,QAGPJ,SAAS,EAOPC,WAAW;AAAA;AAAAyC,EAAA,GAV1BtC,UAAoB;AAyF1B,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}