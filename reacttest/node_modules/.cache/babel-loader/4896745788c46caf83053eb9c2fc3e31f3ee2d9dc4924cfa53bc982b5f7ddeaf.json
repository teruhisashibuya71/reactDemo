{"ast":null,"code":"var _jsxFileName = \"/Users/ts/Desktop/reactDemo/reacttest/src/components/memo/MemoList.tsx\",\n  _s = $RefreshSig$();\n// バックエンドのfindAll処理に紐づくフロント処理\n// 基礎的ななimport文 これらは基本的に必ず記述することになるはず\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './components/memo/MemoList.css';\n\n// バックエンドから返却されるJSONデータ構造と一致させる\n// 通常のjsと異なり型を指定できるので理解しやすい\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoList = () => {\n  _s();\n  //apiアクセスに伴い必要になる定数を用意  \n  const [memos, setMemos] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  //ここからが本番\n  useEffect(() => {\n    const fetchMemos = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/memo/all');\n        //正常終了\n        setMemos(response.data);\n      } catch {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMemos;\n  }, []);\n\n  //fetch処理が完了するまでの間の画面表示\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  //レスポンスがエラーだった場合\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: memos.map(memo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: memo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Created At: \", memo.createdAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Updated At: \", memo.updatedAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, memo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoList, \"mn7UpUWVoABd0b41u7wCs2V8Eic=\");\n_c = MemoList;\nexport default MemoList;\nvar _c;\n$RefreshReg$(_c, \"MemoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MemoList","_s","memos","setMemos","error","setError","loading","setLoading","fetchMemos","response","get","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","memo","content","createdAt","updatedAt","id","_c","$RefreshReg$"],"sources":["/Users/ts/Desktop/reactDemo/reacttest/src/components/memo/MemoList.tsx"],"sourcesContent":["// バックエンドのfindAll処理に紐づくフロント処理\n// 基礎的ななimport文 これらは基本的に必ず記述することになるはず\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './components/memo/MemoList.css';\n\n// バックエンドから返却されるJSONデータ構造と一致させる\n// 通常のjsと異なり型を指定できるので理解しやすい\ninterface Memo {\n    id: number;\n    content: string;\n    createdAt: string;\n    updatedAt: string;\n}\n\nconst MemoList: React.FC = () => {\n  //apiアクセスに伴い必要になる定数を用意  \n  const [memos, setMemos] = useState<Memo[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n\n  //ここからが本番\n  useEffect(() => {\n    const fetchMemos = async () =>  {\n        try {\n            const response = await axios.get<Memo[]>('http://localhost:8080/api/memo/all');\n            //正常終了\n            setMemos(response.data);\n        }catch {\n            setError(error.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    fetchMemos\n  },[]);\n\n  //fetch処理が完了するまでの間の画面表示\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  //レスポンスがエラーだった場合\n  if (error){\n    return <div>Error {error}</div>;\n  }\n\n  return (\n    <div className=\"memo-list\">\n      <h1>Memo List</h1>\n      <ul>\n        {memos.map((memo) => (\n          <li key={memo.id}>\n            <div>\n              <h3>{memo.content}</h3>\n              <p>Created At: {memo.createdAt}</p>\n              <p>Updated At: {memo.updatedAt}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MemoList;"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gCAAgC;;AAEvC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAG5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAa;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAS,oCAAoC,CAAC;QAC9E;QACAP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,OAAM;QACHN,QAAQ,CAACD,KAAK,CAACQ,OAAO,CAAC;MAC3B,CAAC,SAAS;QACNL,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,UAAU;EACZ,CAAC,EAAC,EAAE,CAAC;;EAEL;EACA,IAAIF,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;;EAEA;EACA,IAAIb,KAAK,EAAC;IACR,oBAAOL,OAAA;MAAAc,QAAA,GAAK,QAAM,EAACT,KAAK;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACjC;EAEA,oBACElB,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA;MAAAc,QAAA,EACGX,KAAK,CAACiB,GAAG,CAAEC,IAAI,iBACdrB,OAAA;QAAAc,QAAA,eACEd,OAAA;UAAAc,QAAA,gBACEd,OAAA;YAAAc,QAAA,EAAKO,IAAI,CAACC;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBlB,OAAA;YAAAc,QAAA,GAAG,cAAY,EAACO,IAAI,CAACE,SAAS;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnClB,OAAA;YAAAc,QAAA,GAAG,cAAY,EAACO,IAAI,CAACG,SAAS;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC,GALCG,IAAI,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlDID,QAAkB;AAAAyB,EAAA,GAAlBzB,QAAkB;AAoDxB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}