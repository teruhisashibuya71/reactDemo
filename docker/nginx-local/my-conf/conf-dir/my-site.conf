# 特定サイトの追加設定
# nginx.confの設定に追加されるイメージ

server {
    #listen 443 ssl;
    server_name my-site.localhost;

#     ssl_certificate      /etc/nginx/cert.pem;
#     ssl_certificate_key  /etc/nginx/cert.key;

    # 証明書が無い場合のエラーハンドリング
#     ssl_certificate_by_lua_block {
#         local f = io.open("/etc/nginx/cert.pem", "r")
#         if not f then
#             ngx.log(ngx.ERR, "SSL certificate not found, falling back to HTTP")
#             ngx.exit(444)
#         else
#             f:close()
#         end
#     }

    access_log  /var/log/nginx/my-site.localhost.access.log  main;
    error_log  /var/log/nginx/error.log warn;

    set $username my-site;
    proxy_set_header x-forwarded-proto $scheme;
    proxy_set_header x-forwarded-host $host;
    proxy_set_header forwarded-comici-plus $username;
    client_max_body_size 20m;

    location ~ ^/sitetype/[^/]+(.*) {
        return 301 $scheme://$host$1$is_args$args;
    }

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        rewrite (.*) /sitetype/$username$1 break;
        proxy_pass http://host.docker.internal:5050;
        proxy_redirect off;
    }

    location /error_pages/ {
        root /etc/nginx/;
    }
}

# server {
#     listen 443 ssl;
#     server_name my-site.localhost;
#     ssl_certificate      cert.pem;
#     ssl_certificate_key  cert.key;
#
#
# # 証明書が無い場合のエラーハンドリング
#     ssl_certificate_by_lua_block {
#         local f = io.open("/etc/nginx/cert.pem", "r")
#         if not f then
#             ngx.log(ngx.ERR, "SSL certificate not found, falling back to HTTP")
#             ngx.exit(444)
#         else
#             f:close()
#         end
#     }
#
#     # ログファイルを別で用意する場合
#     access_log  /var/log/nginx/my-site.localhost.access.log  main;
#     error_log  /var/log/nginx/error.log warn;
#
#     # 需要 usernameの値がテストサイト名になる
#     set $username my-site;
#     proxy_set_header x-forwarded-proto $scheme;
#     proxy_set_header x-forwarded-host $host;
#     proxy_set_header forwarded-comici-plus $username;
#     client_max_body_size 20m;
#
#     # locationの記述は最も具体的なパスが優先される
#     # プレフィックスマッチよりも正規表現のほうが優先される. 以下はプレフィックスマッチ
#     location ~ ^/sitetype/[^/]+(.*) {
#         return 301 $scheme://$host$1$is_args$args;
#     }
#
#     location / {
#         proxy_set_header Host $host;
#
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Port $server_port;
#
#         # 以下の記述がリダイレクト用の記述
#         # `http://localhost:8080/home`にアクセス→ `http://localhost:8080/sitetype/my-site/home` にリダイレクトされる
#         # よって、コントローラは @RequestMapping("/sitetype/my-site") で作成すること.
#         rewrite (.*) /sitetype/$username$1 break;
#         proxy_pass http://host.docker.internal:5050;
#         proxy_redirect off;
#     }
#
#     location /error_pages/ {
#         root /etc/nginx/;
#     }
# }
